ET580 PROJECT 1: DYNAMIC ARRAY CONTAINER CLASS - DOCUMENTATION

SIKDER ISHAQ
==================================================================

Implemented the following core functions:

1. Constructor (intArray)
   - Allocates a dynamic array with default size of 5
   - Initializes numValues to 0
   - Sets up the data pointer to the allocated memory

2. Destructor (~intArray)
   - Properly deallocates the dynamic array using delete[]
   - Prevents memory leaks by cleaning up allocated memory

3. empty() function
   - Returns true if the array contains no elements (numValues == 0)
   - Returns false otherwise
   - Provides a quick way to check if the container is empty

==================================================================
BRIAN
==================================================================

Implemented the following core functions:

1. size() function
   - Returns the current number of elements in the array (numValues)
   - Allows users to check how many elements are currently stored

2. maxSize() function
   - Returns the maximum capacity of the array (maxValues)
   - Indicates how many elements can be stored before resizing is needed

3. reserve() function
   - Increases the capacity of the array if needed
   - Creates a new larger array and copies existing elements
   - Properly manages memory by deleting the old array
   - Updates the maxValues variable to reflect the new capacity

==================================================================
ERNEST
==================================================================

Implemented the following core functions:

1. clear() function
   - Removes all elements from the array
   - Resets the array to its default state (size 5, empty)
   - Properly manages memory by deallocating and reallocating

2. push_back() function
   - Adds a new element to the end of the array
   - Automatically doubles the array capacity when full
   - Increments numValues to track the new element count

3. print() function
   - Displays all array elements on a single line
   - Formats output with spaces between elements
   - Ends with a newline character for clean output

